% property(name, owner, mortgage, house, hotel, groupNumber, price, baserent, index)
% player(name, position, money, jail, bidding, index)
% number(value, "propertyIndex")
% number(value, "highestBid")
% number(value, "mySelf"), my index
% number(value, "sameGroup") how many prop of the same group I have
% number(value, "limit") limite di soldi da poter spendere
% output: number(value, "offer")


%property("name", -1, "false", 0, 0, 1, 200, 0, 0).
%number(0, "propertyIndex").
%property("name", 1, "false", 0, 0, 1, 200, 0, 1).
%number(150, "highestBid").
%number(0, "mySelf").
%number(2, "sameGroup").
%number(300, "limit").
%player("name", 0, 500, "false","true", 0).
%player("name", 0, 500, "false","true", 1).


% property(name, owner, mortgage, house, hotel, groupNumber, price, baserent, index)
% player(name, position, money, jail, bidding, index)
% number(value, "propertyIndex")
% number(value, "highestBid")
% number(value, "mySelf"), my index
% number(value, "sameGroup") how many prop of the same group I have
% number(value, "limit") limite di soldi da poter spendere
% output: number(value, "offer")

preferredGroup(1). preferredGroup(2).

% proprietà all'asta
auctionProperty(Index, Group, Price) :- property(_,_,_,_,_,Group,Price,_,Index), number(Index, "propertyIndex").

% join tra i player e le property
playerProperty(Player, Property) :- player(_,_,_,_,_,Player), property(_,Player,_,_,_,_,_,_,Property).

% per ogni player ci salviamo il numero di proprietà dello stesso gruppo rispetto alla proprietà dellasta
playerNumberOfGroupProperty(Player, Number) :- player(_,_,_,_,_,Player), not number(Player, "mySelf"), auctionProperty(_,G,_), Number = #count{P : property(_,Player,_,_,_,G,_,_,P)}.

% se non posso economicamente non faccio nulla
bid | notBid :- number(Value, "highestBid"), player(_,_,M,_,_,Index), number(Index, "mySelf"), Value<M.

% casi in cui non biddo
notBid :- number(V, "highestBid"), number(L, "limit"), V > L.
interestingForSomeone :- playerNumberOfGroupProperty(_,N), N > 0.
interestingForSomeone :- number(Value, "sameGroup"), Value > 1.
notBid :- auctionProperty(_,G,P), not preferredGroup(G), number(Bid, "highestBid"), Bid > P, not interestingForSomeone.
notBid :- auctionProperty(_,G,P), preferredGroup(G), number(Bid, "highestBid"), Bid > P + 200.



% possibili offerte in base ai casi
probablyOffer(O) :- bid, number(L, "limit"), O <= L, number(Bid, "highestBid"), O = Bid + 10.
probablyOffer(O) :- bid, number(L, "limit"), O <= L, number(Bid, "highestBid"), auctionProperty(_,G,_), preferredGroup(G), O = Bid + 50.
probablyOffer(O) :- bid, number(L, "limit"), O <= L, number(Bid, "highestBid"), number(N, "sameGroup"), N > 0, O = Bid + 15*N.
probablyOffer(O) :- bid, number(L, "limit"), O <= L, number(Bid, "highestBid"), playerNumberOfGroupProperty(_,N), N > 0, O = Bid + 15.


% offerta finale
number(P, "offer") :- bid, probablyOffer(P).
number(0, "offer") :- notBid.

:~ notBid. [1@1]
