% property(name, owner, mortgage, house, hotel, groupNumber, price, baserent, arrayIndex).
% number(MONEY, "limit")

groupNumberOfProperty(0,12).
groupNumberOfProperty(1,4).
groupNumberOfProperty(2,2).
groupNumberOfProperty(3,2).
groupNumberOfProperty(4,3).
groupNumberOfProperty(5,3).
groupNumberOfProperty(6,3).
groupNumberOfProperty(7,3).
groupNumberOfProperty(8,3).
groupNumberOfProperty(9,3).
groupNumberOfProperty(10,2).
groupHousePrice(0,0).
groupHousePrice(1,0).
groupHousePrice(2,0).
groupHousePrice(3,50).
groupHousePrice(4,50).
groupHousePrice(5,100).
groupHousePrice(6,100).
groupHousePrice(7,150).
groupHousePrice(8,150).
groupHousePrice(9,200).
groupHousePrice(10,200).
spentMoney(0).

% definisco il limite massimo di soldi da poter spendere
limitMoney(MONEY) :- number(MONEY,"limit").

% considero sole i gruppi sui quali posso piazzare delle case, cio√® i gruppi completi
canBuyHouse(GROUP) :- groupNumberOfProperty(GROUP,NUMBER), #count{P: property(_,_,_,_,_,GROUP,_,_,P)} = NUMBER, GROUP != 1, GROUP != 2.

% mi calcolo (aggiornando il valore) il livello attuale del gruppo sul quale posso piazzare case
groupLevel(GROUP,LEVEL) :- canBuyHouse(GROUP), #min{HOUSE: property(_,_,_,HOUSE,_,GROUP,_,_,_)} = LEVEL.

number(PROP, "a") | notBuyHouse(PROP) :- property(_,_,_,HOUSE,_,GROUP,_,_,PROP), groupLevel(GROUP,LEVEL), HOUSE < 5, HOUSE = LEVEL.
spentMoney(MONEY) :- #sum{X, PROP: number(PROP, "a"), property(_,_,_,_,_,G,_,_,PROP), groupHousePrice(G, X)} = MONEY.
:- limitMoney(MONEY), #max{SPENT: spentMoney(SPENT)} = SPENTMONEY, MONEY < SPENTMONEY.
:~ notBuyHouse(PROP). [1@1, PROP]